# Reload .profile
# ensure changes get in effect in the same session
[ -f "$HOME/.profile" ] && source "$HOME/.profile"

# Zinit
declare -A ZINIT
ZINIT[BIN_DIR]="$XDG_CONFIG_HOME/zsh/zinit/bin"
ZINIT[HOME_DIR]="$XDG_CONFIG_HOME/zsh/zinit"
ZINIT[ZCOMPDUMP_PATH]="$XDG_CACHE_HOME/zsh/zcompdump"

# install if not found
if ! [ -f "$ZINIT[BIN_DIR]/zinit.zsh" ]; then
    git clone --depth 1 --branch main "https://github.com/zdharma-continuum/zinit" "$ZINIT[BIN_DIR]" &&
fi && source "$ZINIT[BIN_DIR]/zinit.zsh" # load

# Zinit (plugins) 
# docs: https://zdharma-continuum.github.io/zinit/wiki/INTRODUCTION/
# each line is a different plugin, this is an advanced syntax to load plugins delayed (turbo mode) and in parallel
zinit wait lucid depth=1 for \
    atinit="zicompinit; zicdreplay" zdharma-continuum/fast-syntax-highlighting \
    atload="_zsh_autosuggest_start" zsh-users/zsh-autosuggestions \
    from="gh-r" as="program" pick="$ZPFX/bin/sysz" joehillen/sysz \
    Aloxaf/fzf-tab \
    wfxr/forgit \
    is-snippet "/usr/share/fzf/key-bindings.zsh" \
    as"completion" is-snippet "$HOME/.dotfiles/shell/completions/_poetry" \
    as"completion" is-snippet https://github.com/ianmkenney/timewarrior_zsh_completion/blob/main/_timew \

# Bindings
bindkey  "^[[H"    beginning-of-line
bindkey  "^[[F"    end-of-line
bindkey  "^[[1;2D" backward-word # Shift+ArrowLeft
bindkey  "^[[1;2C" forward-word # Shift+ArrowRight
bindkey  "^[[5~"   vi-forward-word # Shift+PageUp?
bindkey  "^[[6~"   vi-backward-word # Shift+PageDown?
bindkey  "^[[2~"   delete-word # Shift+Insert?
bindkey  "^[[3~"   delete-char # Delete

# Options
# https://zsh.sourceforge.io/Doc/Release/Options.html
# setopt append_history # append at exit
setopt inc_append_history # append immediately
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks

# Extra
# if X set terminal title
if [[ "$TERM" != "linux" ]]; then
    function x_title_precmd () {
        print -Pn -- '\e]2;%n@%m %~\a'
        [[ "$TERM" == 'screen'* ]] && print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-}\e\\'
    }
    function x_title_preexec () {
        print -Pn -- '\e]2;%n@%m %~ %# ' && print -n -- "${(q)1}\a"
        [[ "$TERM" == 'screen'* ]] && { print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-} %# ' && print -n -- "${(q)1}\e\\"; }
    }

    add-zsh-hook -Uz precmd x_title_precmd
	  add-zsh-hook -Uz preexec x_title_preexec
fi

# use beam shape cursor
echo -ne '\e[5 q' # on startup.
preexec() { echo -ne '\e[5 q' ;} # for each new prompt.

# selection menu for completion
zstyle ':completion:*' menu select

# ctrl-e to edit line in editor
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# enable Vi mode
# bindkey -v

# use Insert to enable Vi mode 
# function zle-line-init() {
#     zle -K viins
#     echo -ne "\e[5 q"
# }
# zle -N zle-line-init

# change cursor shape for different vi modes
# function zle-keymap-select {
# 	if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
# 		echo -ne '\e[1 q'
#   	elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
# 		echo -ne '\e[5 q'
# 	fi
# }
# zle -N zle-keymap-select

# Starship
eval "$(starship init zsh)"

# Direnv
eval "$(direnv hook zsh)"
