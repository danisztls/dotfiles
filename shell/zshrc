# Instant Prompt
# --------------
# FIXME: Causing glitches on Zellij
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]] && ! [ $ZELLIJ ]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Reload .profile
# ---------------
# ensure changes get in effect in the same session
[ -f "$HOME/.profile" ] && emulate sh -c 'source "$HOME/.profile"'

# Zinit
# -------------
# https://github.com/zdharma/zinit
# the fastest plugin manager but also the most complex
declare -A ZINIT
ZINIT[BIN_DIR]="$XDG_CONFIG_HOME/zsh/zinit/bin"
ZINIT[HOME_DIR]="$XDG_CONFIG_HOME/zsh/zinit"
ZINIT[ZCOMPDUMP_PATH]="$XDG_DATA_HOME/shell/zcompdump"

# install if not found
if ! [ -f "$ZINIT[BIN_DIR]/zinit.zsh" ]; then
    git clone --depth 1 --branch master "https://github.com/zdharma/zinit" "$ZINIT[BIN_DIR]" &&
fi && source "$ZINIT[BIN_DIR]/zinit.zsh" # load

# Plugins
# -------
zinit wait lucid depth=1 for \
    atinit"zicompinit; zicdreplay" \
        zdharma/fast-syntax-highlighting \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    blockf atpull'zinit creinstall -q .' \
        zsh-users/zsh-completions \
    is-snippet \
        "/usr/share/fzf/key-bindings.zsh" \
    load \
        sobolevn/wakatime-zsh-plugin \

# Core
# ----
# If dumb console set rainbow prompt
if [[ "$TERM" == linux ]]; then
    autoload -U colors && colors
    export PS1="%B%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$reset_color%} $%b "

# If X load P10K and set terminal title
else
    zinit depth=1 for \
        load \
            romkatv/powerlevel10k \
        is-snippet \
            "$XDG_CONFIG_HOME/zsh/p10k.zsh"
	
    function x_title_precmd () {
        print -Pn -- '\e]2;%n@%m %~\a'
        [[ "$TERM" == 'screen'* ]] && print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-}\e\\'
    }
    function x_title_preexec () {
        print -Pn -- '\e]2;%n@%m %~ %# ' && print -n -- "${(q)1}\a"
        [[ "$TERM" == 'screen'* ]] && { print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-} %# ' && print -n -- "${(q)1}\e\\"; }
    }

    add-zsh-hook -Uz precmd x_title_precmd
	add-zsh-hook -Uz preexec x_title_preexec
fi

# Bindings
# --------
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[5~"  vi-forward-word
bindkey  "^[[6~"  vi-backward-word 
bindkey  "^[[2~"  delete-word
bindkey  "^[[3~"  delete-char

# Extra
# -----
# Use beam shape cursor
echo -ne '\e[5 q' # on startup.
preexec() { echo -ne '\e[5 q' ;} # for each new prompt.

# Selection menu for completion
zstyle ':completion:*' menu select

# Ctrl-e to edit line in editor
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# Vi Mode
# change cursor shape for different vi modes
#function zle-keymap-select {
#	if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
#		echo -ne '\e[1 q'
#  	elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
#		echo -ne '\e[5 q'
#	fi
#}

# initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
#function zle-line-init() {
#    zle -K viins
#    echo -ne "\e[5 q"
#}

#zle -N zle-keymap-select
#zle -N zle-line-init
