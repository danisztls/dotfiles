#!/bin/bash
#
# Upscale and convert images to an Internet friendly resolution and format

# @author: Daniel Souza <me at posix dot dev dot br>
# @license: GPL3
# @deps: imagemagick, realesrgan-ncnn-vulkan
# @usage:
#     upscale file.[png|jpg|jpeg]

# NOTE: Real-ESRGAN upscaling method only support PNG and JPG

# Defaults
defaultWidth=1920
# defaultFormat="avif"
defaultFormat="webp"
defaultQuality=100 # lossless
defaultNameSuffix="_v2"
# defaultModel="realesr-animevideov3" # denoise more
defaultModel="realesrgan-x4plus" # denoise less

# Formatting strings
reset="\e[0;0m"
yellow="\e[1;33m"
blue="\e[1;34m"
red="\e[1;31m"
strong="\e[1;39m"

# Dependencies
deps=(convert identify realesrgan-ncnn-vulkan)
for prog in "${deps[@]}"; do
  if [ ! "$(command -v "$prog")" ]; then
    printf "${red}Required dependency not found: ${strong}%s${reset}\n" "$prog"
    exit 1
  fi
done

# Input Path Inference
inputPath="$1"
if [ ! -f "$inputPath" ]; then
  printf "${red}Input file not found: ${strong}%s${reset}\n" "$inputPath"
  exit 1
fi

inputDir="$(dirname "$inputPath")"
inputFile="$(basename "$inputPath")"
inputName="${inputFile%.*}"
# inputExtension="${inputFile##*.}"

# Dimensions Inference
inputInfo=$(identify "$inputPath")
inputWidth=$(perl -pe 's|.*?([0-9]+)x.*|$1|' <<< "$inputInfo")
# inputHeight=$(perl -pe 's|.*x([0-9]+).*|$1|' <<< "$inputInfo")

# if [ "$inputWidth" -eq "$inputHeight" ]; then
#   inputType="squared"
# elif [ "$inputWidth" -gt "$inputHeight" ]; then
#   inputType="landscape"
# else
#   inputType="portrait"
# fi

if [ "$inputWidth" -lt "$defaultWidth" ]; then
  _model="$defaultModel"
fi

# Output Path Inference
outputPath="${inputDir}/${inputName}${defaultNameSuffix}${_model:+_$_model}.${defaultFormat}"
if [ -f "$outputPath" ]; then
  printf "${red}Output file already exists: ${strong}%s${reset}\n" "$outputPath"
  exit 1
fi

# Library
_upscale() {
  printf "${blue}Upscaling with ${yellow}%s${reset}\n" "$defaultModel"
  realesrgan-ncnn-vulkan -n "$defaultModel" -i "$1" -o "$2" &>/dev/null 
  # NOTE: realesrgan-ncnn-vulkan isn't working with paths that contain spaces
}

_convert() {
  printf "${blue}Converting to ${yellow}%s${reset}\n" "${defaultFormat^^}"
  convert -quality ${defaultQuality} -resize ${defaultWidth}x\> "$1" "$2" &>/dev/null
}

# Main
if [ ! "$_model" ]; then
  _convert "$inputPath" "$outputPath"

else
  tmpPath="/run/user/$(id -u)/upscale/$inputPath"
  mkdir -p "${tmpPath%/*}" # create dirs for tmpFile
  _upscale "$inputPath" "$tmpPath"
  _convert "$tmpPath" "$outputPath"
  rm "$tmpPath"
fi
