#!/bin/bash
# Link dotfiles from repo to $HOME

# Strict mode
set -e
set -o pipefail

# Get options from optargs
# -f is force mode, to overwrite instead of backing up files
while getopts "f" option; do
    case $option in
        f) forceMode=true;;
        *) printf "\e[33mSomething unexpected happened.\n\e[0m"
    esac
done

# Backup existing config by default
if ! [ $forceMode ]; then
    mkdir -p "$HOME/dotfiles-backup"
    _getridof() { mv -b "$1" "$HOME/dotfiles-backup"; }
# Use trash instead of rm if available
elif [ "$(command -v trash)" ]; then
    _getridof() { trash "$1"; }
# Remove when no alternative is left
else
    _getridof() { rm "$1"; }
fi

_link() {
# Link files
# Symbolic links using absolute paths,
# configuration will break if source is renamed 
    # Return error if expected argument is missing
    if [ "$#" -lt 2 ]; then
        printf "\e[31mMissing arguments!\n\e[0m"
        return 1
    fi
    # Source and Destination
    src="$PWD/$1"
    dst="$HOME/$2"
    dst_dir="${dst%/*?}"
    # Noop if it's already the right symlink
    if [ "$(readlink "$dst")" = "$src" ]; then
        printf "\e[1;39m'%s'\e[0;34m is already set up!\n" "$dst"
        return 0
    fi

    # Get rid of existent
    if [ -e "$dst" ]; then
        printf "\e[1;39m'%s'\e[0;33m exists. Do you want to get rid of it?\e[1;39m (y/N)\n\e[0m" "$dst"
        while true; do
            read -r answer
            case ${answer:0:1} in
                y|Y) _getridof "$dst"; return;;
                n|N) return;;
                *) continue;;
            esac
        done
    fi
    # Ensure parent dirs exist at destination
    mkdir -p "$dst_dir"
    # Link files
    ln -s "$src" "$dst" &&
    printf "\e[32mSuccesfully linked\e[1;39m '%s'\e[0;32m to\e[1;39m '%s'\e[0;32m!\n\e[0m" "$src" "$dst"
}

_link "shell/profile"           ".profile"
_link "shell/bashrc"            ".bashrc"
_link "shell/Xresources"        ".Xresources"
_link "shell/zshrc"             ".zshrc"
_link "shell/zsh"               ".config/zsh"
_link "shell/aliases"           ".config/shell/aliases"
_link "shell/autostart"         ".config/shell/autostart"
_link "shell/functions"         ".config/shell/functions"
_link "shell/tmux"              ".config/tmux"
_link "shell/alacritty.yml"     ".config/alacritty.yml"
_link "shell/kitty"             ".config/kitty"
_link "vim"                     ".config/vim"
_link "git/config"              ".gitconfig"
_link "misc/rofi"               ".config/rofi"
_link "templates"               ".templates"
_link "weechat"                 ".config/weechat"
