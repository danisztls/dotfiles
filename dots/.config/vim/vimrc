" plugins
call plug#begin('$XDG_CONFIG_HOME/vim/plugged')
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim' " fuzzy search

Plug 'preservim/nerdtree' " file browser 
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'ryanoasis/vim-devicons'

Plug 'vim-airline/vim-airline' " status line

Plug 'airblade/vim-gitgutter' " git highlight, un/stage changes
Plug 'tpope/vim-fugitive' " conflict resolution flow
"Plug 'jreybert/vimagit' 

Plug 'dense-analysis/ale' " syntax highlighting
"Plug 'vim-syntastic/syntastic' " slower

"Plug 'neoclide/coc.nvim', {'branch': 'release'} " lsp editor

Plug 'metakirby5/codi.vim' " REPL

Plug 'mzlogin/vim-markdown-toc' " md table of contents
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install' }
Plug 'jceb/vim-orgmode'
call plug#end()

"set vim info path
set viminfo+='1000,n$XDG_CACHE_HOME/vim/viminfo
if has('nvim') | let &viminfo .= '.nvim' | endif

"set nocompatible
filetype plugin indent on
syntax on
set encoding=utf-8

" line number
set number relativenumber
nmap <leader>h :setlocal number! relativenumber!<CR>

" 4 spaces tab
set tabstop=4
set shiftwidth=4
set expandtab

" autocompletion
set wildmode=longest,list,full

" fix splits
set splitbelow splitright
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" clipboard
vnoremap <C-c> "*y :let @+=@*<CR>
map <C-v> "+P

" spell-check
nmap <leader>en :setlocal spell! spelllang=en_us<CR>
nmap <leader>pt :setlocal spell! spelllang=pt_br<CR>

" vim auto-update
set updatetime=250

" disable automatic commenting on new line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" fzf
nmap <leader>f :Files

" nerdtree
map <leader>b :NERDTreeToggle<CR>
let g:NERDTreeGitStatusUseNerdFonts = 1

" airline
let g:airline#extensions#tabline#enabled = 1
"let g:airline_powerline_fonts = 1

" gitgutter
highlight GitGutterAdd    guifg=#009900 ctermfg=2
highlight GitGutterChange guifg=#bbbb00 ctermfg=3
highlight GitGutterDelete guifg=#ff2222 ctermfg=1

" fugitive

" syntastic
""set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"nmap <leader>s :SyntasticCheck
"nmap <leader>S :SyntasticReset
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

" ALE

" codi
nmap <leader>c :Codi
nmap <leader>C :Codi!

" markdown-preview
"let g:mkdp_refresh_slow = 1
let g:mkdp_browser = "electron"
nmap <leader>p <Plug>MarkdownPreviewToggle

"vim-markdown
let g:vim_markdown_math = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_folding_disabled = 1
set conceallevel=2

"vim-markdown-toc
let g:vmt_fence_text = 'TOC'
let g:vmt_fence_closing_text = '/TOC'
let g:vmt_list_item_char = '-'
nmap <leader>t :GenTocGitLab<CR>

