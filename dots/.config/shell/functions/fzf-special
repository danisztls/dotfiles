#!/bin/bash
# fzf specialized functional fuzzy searches
# dependencies: fzf, ripgrep, trash-cli 
# optionals: ripgrep-all

fzf-special() {
    printHelp() {
        printf "USAGE:
        \t\e[1m'hidden'\e[0m hidden files excluding .git and .cache;
        \t\e[1m'md'\e[0m markdown files;
        \t\e[1m'pdf'\e[0m pdf and postscript files;
        \t\e[1m'media'\e[0m videos and audio files;
        \t\e[1m'full'\e[0m full text search documents; 
        \t\e[1m'cd'\e[0m show and cd to sub-directories;
        \t\e[1m'ps'\e[0m show and manage processes."
    }

    # SHORTCUTS
    # f1 opens with xdg-open, f2 opens with text editor, f3 copy path to console clipboard,
    # f4 echoes path to stdout, del move file to trash.

    # open with nautilus is disabled because it's hanging the console after window is closed
    # f4:execute-silent(nautilus -w -s {} >/dev/null)

    # SETTINGS
    textEditor="nvim"
    pdfPreviewer="evince -w"
    mediaPreviewer="mpv --no-terminal --length=5" # autoclose after 5s 

    # COLORS 
    colors="--color=\
dark,\
fg:-1,\
bg:-1,\
hl:#9173eb,\
fg+:#ffffff,\
bg+:#2d3444,\
hl+:#7047eb,\
info:#98c379,\
prompt:#61afef,\
pointer:#be5046,\
marker:#e5c07b,\
spinner:#61afef,\
header:#61afef"
    
    # DEFAULTS
    export FZF_DEFAULT_OPTS="--bind '\
f1:execute-silent(xdg-open {} 2>/dev/null),\
f2:execute(${EDITOR:-$textEditor} {}),\
f3:execute-silent(xclip <<< {}),\
f4:accept' \
        --header 'f1 → default, f2 → editor, f3 → clipboard, f4 → terminal, del → delete' \
        --preview-window=right:60%:wrap ${colors}"

    batPreview="bat --style=numbers --color=always --line-range :500 {}"
    
    ## F: find almost anything
    fzfDefault() {
        fd -t f -i -E '**/.git/**' -E '**cache/**' -E '**/node_modules/**' | fzf --preview "$batPreview"
    }
    
    ## FHIDDEN: find anything including hidden files
    fzfHidden() {
        fd -t f -iuu -E '**/.git/**' -E '.cache/**' | fzf --preview "$batPreview"
    }
    ## FMD: find markdown notes
    fzfMd() {
        fd -t f -i -g '*.md' |
        fzf --bind "del:reload(trash {} && fd -t f -i -g '*.md')" --preview "$batPreview"
    }

    ## FPDF: find preview pdf and postscript files
    fzfPdf() {
        fd -t f -i '^.*\.(pdf|ps|eps)$' | fzf --bind "enter:execute-silent($pdfPreviewer {} &>/dev/null),del:reload(trash {} && fd -t f -i '^.*\.(pdf|ps|eps)$')"
    }

    ## FVID: find video files 
    fzfMedia() {
        fd -t f -i '^.*\.(mkv|mp4|webm|avi)$' | fzf --bind "enter:execute-silent($mediaPreviewer {}),del:reload(touch {} && fd -t f -i '^.*\.(mkv|mp4|webm|avi)$')"
    } 

    # FULL: search inside files
    fzfFull() {
        if [[ $(command -v rga) ]]; then
            rgFind="rga -i --files-with-matches --rga-adapters='-decompress,tar,zip,ffmpeg,sqlite'"
            rgPreview="[[ ! -z {} ]] && rga --pretty --context 10 {q} {}"
        else
            rgFind="rg -i --files-with-matches --no-messages"
            rgPreview="rg --ignore-case --pretty --no-line-number --context 10 {q} {}"
        fi

        export FZF_DEFAULT_COMMAND="$rgFind '$1'"
        fzf --preview "$rgPreview" \
            --sort --phony -q "$1" \
            --bind "change:reload:$rgFind {q}"
    }

    ## FCD: search dirs and cd to them
    fzfCd() {
        # shellcheck disable=SC2164 # it's already a noop
        cd "$(fd -t d -i |
        fzf --preview 'tree -C -c {} | head -200' --bind 'enter:accept' \
            --header 'f1 → browser, f2 → editor, enter → cd')"
    }
    
    ## FPS: search processes and manage them
    ## f1 term, f2 kill, f3 sleep, f4 wake
    fzfPs() {
        psFind="grc --colour=on ps -Ao pid,cmd,%mem,%cpu,tt,user,time,stat"
        # shellcheck disable=SC2031
        export FZF_DEFAULT_COMMAND="$psFind"
        fzf --ansi --header-lines=1 --reverse --cycle \
            --header "f1 → SIGTERM, f2 → SIGKILL, f3 → SIGSTOP, f4 → SIGCONTv" \
            --bind "change:reload($psFind),\
f1:reload(kill -15 {1} && sleep 0.15 && $psFind),\
f2:reload(kill -9 {1} && sleep 0.15 && $psFind),\
f3:reload(kill -19 {1} && sleep 0.15 && $psFind),\
f4:reload(kill -18 {1} && sleep 0.15 && $psFind)"
    }

    case $1 in
        help) printHelp ;;
        hidden) fzfHidden ;;
        md) fzfMd ;;
        pdf) fzfPdf ;;
        media) fzfMedia ;;
        full) fzfFull "$2" ;;
        cd) fzfCd ;;
        ps) fzfPs "$2" ;;
        *) fzfDefault ;;
    esac
}
